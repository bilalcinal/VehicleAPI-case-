// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleAPI.DataAccess.Concrete.Context;

#nullable disable

namespace VehicleAPI.DataAccess.Migrations
{
    [DbContext(typeof(VehicleAPIDbContext))]
    [Migration("20230111194149_Mig-5")]
    partial class Mig5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VehicleAPI.Entities.Concrete.BoatModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Boats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 1000,
                            Color = "red"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 100,
                            Color = "blue"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 40,
                            Color = "black"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 50,
                            Color = "white"
                        });
                });

            modelBuilder.Entity("VehicleAPI.Entities.Concrete.BusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<int>("LuggageCapacity")
                        .HasColumnType("int");

                    b.Property<int>("Wheels")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "red",
                            LuggageCapacity = 50,
                            Wheels = 2
                        },
                        new
                        {
                            Id = 2,
                            Color = "blue",
                            LuggageCapacity = 30,
                            Wheels = 2
                        },
                        new
                        {
                            Id = 3,
                            Color = "black",
                            LuggageCapacity = 20,
                            Wheels = 2
                        },
                        new
                        {
                            Id = 4,
                            Color = "white",
                            LuggageCapacity = 25,
                            Wheels = 2
                        });
                });

            modelBuilder.Entity("VehicleAPI.Entities.Concrete.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<bool>("Headlights")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Wheels")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "red",
                            Headlights = true,
                            Wheels = 2
                        },
                        new
                        {
                            Id = 2,
                            Color = "blue",
                            Headlights = true,
                            Wheels = 3
                        },
                        new
                        {
                            Id = 3,
                            Color = "black",
                            Headlights = true,
                            Wheels = 4
                        },
                        new
                        {
                            Id = 4,
                            Color = "white",
                            Headlights = true,
                            Wheels = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
